{"version":3,"sources":["components/AddTasks.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTasks","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","console","log","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","whenclick","color","onClick","style","backgroundColor","Header","title","ONAdd","showTask","defaultProps","Task","task","deleteTask","ontoggle","onDoubleClick","id","Tasks","tasks","ondelete","map","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","JSON","stringify","filter","onToggle","taskToToggle","updatdeTask","body","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93a4ed95.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst AddTasks=({onAdd})=>{\r\n    const [text, setText]=useState('')\r\n    const [day, setDay]=useState('')\r\n    const [reminder, setReminder]=useState(false)\r\n\r\n    const onsubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log('PREVENT DEFAULT CALLED')\r\n\r\n        if(!text){\r\n            alert('Please enter the text value')\r\n            return\r\n        }\r\n\r\n        onAdd({text, reminder, day})\r\n        // after the submit cleare inputs //\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return(\r\n        \r\n            <form className='add-form' onSubmit={onsubmit}>\r\n                <div className='form-control'>\r\n                <label>Add Task</label>\r\n                <input type='text'  placeholder='Enter task'  \r\n                value={text} \r\n                onChange={(e) =>setText(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className='form-control'>\r\n                <label>Add Day & Time</label>\r\n                <input type='text' placeholder='Enter day & time'\r\n                 value={day} \r\n                 onChange={(e) =>setDay(e.target.value)} />\r\n                </div>\r\n\r\n                <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder}\r\n                 value={reminder} \r\n                 onChange={(e) =>setReminder(e.currentTarget.checked)} />\r\n                </div>\r\n                <input type='submit' value='Save Task' className='btn btn-block'/>\r\n\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddTasks","\r\nconst Button =({whenclick, color, text}) =>{\r\n   \r\n    return(\r\n    <button onClick={whenclick} style={{backgroundColor:color}} className='btn'>{text}</button>\r\n    )\r\n}\r\nexport default Button\r\n","import PropsTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({title, ONAdd, showTask}) => {\r\n\r\n\r\n\r\n    return (\r\n       <header className='header'>\r\n           <h1>{title}</h1>\r\n           <Button color={showTask ? 'green' : 'black'} text={showTask ? 'Add' : 'Close'} whenclick={ONAdd}/>\r\n       </header>\r\n    )\r\n}\r\nexport default Header\r\n\r\nHeader.defaultProps={\r\n    title:'Tasks Tracer',\r\n}\r\nHeader.propTypes={\r\n    title: PropsTypes.string.isRequired,\r\n}","import {FaEdit, FaRegTimesCircle, FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({task, deleteTask, ontoggle}) => {\r\n    return (\r\n        \r\n            \r\n             <div   className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>ontoggle(task.id)}>\r\n                 <h3>{task.text} {<FaRegTimesCircle style={{color:'red'}} onClick={()=>deleteTask(task.id)} />}\r\n                 </h3>\r\n                  <p>{task.day}</p>\r\n                  <p className=\"edit\">\r\n                        {/* {<FaEdit style={{color:'green'}}  />} */}\r\n                  </p>\r\n              </div>\r\n             \r\n            \r\n       \r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Task","import Task from \"./Task\"\r\n\r\n\r\nconst Tasks= ({tasks,ondelete, ontoggle})=>{\r\n\r\n    \r\n\r\n  \r\n    return(\r\n      \r\n        <>\r\n        {tasks.map((task)=>(\r\n       <Task key={task.id} task={task} deleteTask={ondelete} ontoggle={ontoggle}/>\r\n        )\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import './App.css';\r\nimport AddTasks from './components/AddTasks';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport { useEffect, useState } from 'react';\r\nimport { FaTimes } from \"react-icons/fa\"\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [showAddTask, setShowAddTask] = useState(true)\r\n  const [tasks, setTasks]=useState([])\r\n\r\n  useEffect(()=>{\r\n   const getTasks= async ()=>{\r\n     const tasksFromServer= await fetchTasks()\r\n     setTasks(tasksFromServer)\r\n   }\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks from db.json //\r\n  const fetchTasks=async()=>{ \r\n    const res =await fetch('http://localhost:5000/tasks')\r\n      const data= await res.json()\r\n      return data\r\n        }\r\n\r\n  // Fetch Task from db.json //\r\n  const fetchTask=async(id)=>{ \r\n    const res =await fetch(`http://localhost:5000/tasks/${id}`)\r\n      const data= await res.json()\r\n      return data\r\n        }\r\n\r\n\r\n// AddTask //\r\nconst addTask= async (task)=>{\r\n \r\n  const res = await fetch(`http://localhost:5000/tasks`,\r\n  {\r\n    method: 'POST',\r\n    // add Header to specify type of content //\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    // convert getting data from input convert object into json because we are sending data to db.json //\r\n    'body': JSON.stringify(task)\r\n  })\r\n  const data= await res.json()\r\n  setTasks([...tasks, data])\r\n}\r\n\r\n  // OnDelete //\r\n  const deleteTask= async(id) =>{\r\n   await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n  setTasks(tasks.filter((task)=>task.id !==id))\r\n  \r\n  }\r\n  \r\n\r\n  // onToggle //\r\n  const onToggle= async(id)=>{\r\n    const taskToToggle= await fetchTask(id)\r\n    const updatdeTask= { ...taskToToggle, \r\n    reminder: !taskToToggle.reminder}\r\n\r\n\r\n    const res= await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatdeTask)\r\n    })\r\n    const data= await res.json()\r\n    \r\n\r\n    setTasks(\r\n      tasks.map(\r\n        (task)=>task.id===id ?{...task, reminder:data.reminder}:task)\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Header ONAdd={()=>setShowAddTask(!showAddTask)} showTask={showAddTask}/>\r\n      {/* {(showAddTask) ? '' : <AddTasks onAdd={addTask}/>} */}\r\n      {/* OR */}\r\n      {(!showAddTask) && <AddTasks onAdd={addTask}/>}\r\n      {tasks.length>0 ? <Tasks  tasks={tasks} ondelete={deleteTask} ontoggle={onToggle} /> : 'No tasks to show'}\r\n      \r\n    \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}